name: ps3dec building
on:
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools musl-dev gcc-multilib
    - name: Set up Cargo config
      shell: bash
      run: |
        mkdir -p ~/.cargo
        cat << EOF > ~/.cargo/config
        [target.x86_64-pc-windows-gnu]
        rustflags = ["-C", "target-feature=+crt-static"]
        [target.x86_64-unknown-linux-musl]
        rustflags = ["-C", "target-feature=-crt-static", "-C", "link-arg=-lgcc", "-C", "link-arg=-static-libgcc"]
        linker = "musl-gcc"
        [target.x86_64-apple-darwin]
        rustflags = ["-C", "target-feature=-crt-static"]
        [target.aarch64-apple-darwin]
        rustflags = ["-C", "target-feature=-crt-static"]
        EOF
    - name: Build
      run: |
        rustc -vV
        cargo build --verbose --release --target ${{ matrix.target }}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ps3decremake_cli-${{ matrix.target }}
        path: |
          target/${{ matrix.target }}/release/ps3decremake_cli*
          target/${{ matrix.target }}/release/libps3decremake.*
        if-no-files-found: error
